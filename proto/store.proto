syntax = "proto3";

package distributedstore;

import "google/protobuf/empty.proto";

service KeyValueStore {
    // Base API
  rpc put(PutRequest) returns (PutResponse);

  rpc get(GetRequest) returns (GetResponse);

  rpc slowDown(SlowDownRequest) returns (SlowDownResponse);

  rpc restore(RestoreRequest) returns (RestoreResponse);

    // Requests for 2PC
  rpc canCommit(CommitRequest) returns (CommitResponse);

  rpc doCommit(CommitRequest) returns (CommitResponse);

  rpc registerSlave(SlaveInfo) returns (Response);

    // Requests for Decentralized
  rpc voteGet(voteGetRequest) returns (voteGetResponse);

  rpc votePut(PutRequest) returns (votePutResponse);

}

message PutRequest {
  string key = 1;
  string value = 2;
}

message PutResponse {
  bool success = 1;
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  string value = 1;
  bool found = 2;
}

message SlowDownRequest {
  int32 seconds = 1;
}

message SlowDownResponse {
  bool success = 1;
}

message RestoreRequest {}

message RestoreResponse {
  bool success = 1;
}

message CommitRequest {
  string key = 1;
  string value = 2;
}

message CommitResponse {
  bool success = 1;
}

message SlaveInfo {
  string address = 1;
}

message Response {
  string store = 1;
  bool success = 2;
}

message voteGetRequest {
  string key = 1;
}

message voteGetResponse {
  bool success = 1;
  string value = 2;
  int32 size = 3;
}

message votePutResponse {
  bool success = 1;
  int32 size = 2;
}

message Empty {}